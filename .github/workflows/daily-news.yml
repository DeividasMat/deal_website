name: Daily News Collection
on:
  schedule:
    # Run 3 times daily to catch more news throughout the day
    - cron: '0 8 * * *'   # 8:00 AM UTC (3:00 AM EST)
    - cron: '0 12 * * *'  # 12:00 PM UTC (7:00 AM EST) 
    - cron: '0 17 * * *'  # 5:00 PM UTC (12:00 PM EST)
  
  # Allow manual triggering for testing
  workflow_dispatch:
    inputs:
      manual_run:
        description: 'Manual run confirmation'
        required: true
        default: 'false'
        type: choice
        options:
        - 'false'
        - 'true'

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Verify Timing and Environment
        run: |
          echo "🕐 GitHub Actions Workflow Started"
          echo "⏰ Current UTC Time: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "⏰ Current EST Time: $(TZ=America/New_York date '+%Y-%m-%d %H:%M:%S %Z')"
          echo "🔧 Run Type: ${{ github.event_name }}"
          
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.manual_run }}" != "true" ]]; then
            echo "❌ Manual run not confirmed. Set manual_run to 'true' to proceed."
            exit 1
          fi
          
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            current_hour=$(date -u +%H)
            case "$current_hour" in
              "08") echo "✅ Running morning collection (08:00 UTC)" ;;
              "12") echo "✅ Running midday collection (12:00 UTC)" ;;
              "17") echo "✅ Running evening collection (17:00 UTC)" ;;
              *) 
                echo "⚠️ WARNING: Scheduled job running at hour $current_hour instead of expected hours 08, 12, or 17"
                echo "⚠️ This might indicate GitHub Actions scheduling delays"
                ;;
            esac
          fi

      - name: Fetch Daily News
        run: |
          current_hour=$(date -u +%H)
          case "$current_hour" in
            "08") echo "🌅 Starting morning private credit news collection..." ;;
            "12") echo "🌞 Starting midday private credit news collection..." ;;
            "17") echo "🌆 Starting evening private credit news collection..." ;;
            *) echo "🚀 Starting private credit news collection..." ;;
          esac
          
          echo "📡 Target: https://privatecreditpulse.net"
          echo "⏰ Collection Time: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          
          # Make the API call with enhanced error handling
          response=$(curl -s -w "%{http_code}" -X GET "https://privatecreditpulse.net/api/cron/daily-news" \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            -H "User-Agent: GitHub-Actions-CronJob-${current_hour}h" \
            --connect-timeout 30 \
            --max-time 900)
          
          http_code="${response: -3}"
          response_body="${response%???}"
          
          echo "📊 HTTP Status Code: $http_code"
          echo "📄 Response Body Length: ${#response_body} characters"
          echo "📄 Response Preview: ${response_body:0:500}..."
          
          if [ "$http_code" -eq 200 ]; then
            echo "✅ Daily news collection API call successful"
            
            # Try to parse JSON response for additional info
            if command -v jq &> /dev/null; then
              echo "$response_body" | jq -r '.message // "No message field"' 2>/dev/null || echo "Response is not valid JSON"
            fi
          else
            echo "❌ Daily news collection failed"
            echo "💬 Full response: $response_body"
            
            # Retry once after 30 seconds
            echo "🔄 Retrying in 30 seconds..."
            sleep 30
            
            retry_response=$(curl -s -w "%{http_code}" -X GET "https://privatecreditpulse.net/api/cron/daily-news" \
              -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
              -H "Content-Type: application/json" \
              --connect-timeout 30 \
              --max-time 900)
            
            retry_code="${retry_response: -3}"
            retry_body="${retry_response%???}"
            
            echo "🔄 Retry Status: $retry_code"
            if [ "$retry_code" -eq 200 ]; then
              echo "✅ Retry successful"
            else
              echo "❌ Retry also failed: $retry_body"
              exit 1
            fi
          fi

      - name: Verify Collection Results
        if: success()
        run: |
          echo "🔍 Verifying news collection results..."
          
          # Check the API status endpoint
          status_response=$(curl -s "https://privatecreditpulse.net/api/cron/status" || echo "Failed to fetch status")
          echo "📊 Current Status: $status_response"

      - name: Success Notification
        if: success()
        run: |
          current_hour=$(date -u +%H)
          case "$current_hour" in
            "08") echo "🎉 Morning news collection completed successfully!" ;;
            "12") echo "🎉 Midday news collection completed successfully!" ;;
            "17") echo "🎉 Evening news collection completed successfully!" ;;
            *) echo "🎉 Daily news collection completed successfully!" ;;
          esac
          
          echo "⏰ Completion Time: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "✅ Next scheduled runs: 08:00, 12:00, 17:00 UTC daily"
          
      - name: Failure Notification  
        if: failure()
        run: |
          current_hour=$(date -u +%H)
          echo "⚠️ News collection workflow failed at ${current_hour}:00 UTC!"
          echo "⏰ Failure Time: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          echo "🔧 Please check the logs above for detailed error information"
          echo "📧 Consider manual investigation of the news collection system"
